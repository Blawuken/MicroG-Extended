name: Builder APK

on:
  push:
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Make sure the release step uses its own credentials:
          # https://github.com/cycjimmy/semantic-release-action#private-packages
          persist-credentials: false
          fetch-depth: 0

      - name: JDK Setup
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Cache Gradle
        uses: burrunan/gradle-cache-action@v1

      - name: Setup Java
        run: echo "JAVA_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV

      - name: "Gradle Wrapper validation"
        uses: gradle/wrapper-validation-action@v2

      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v3

      - name: "Setup matchers"
        run: |
          # Setting up matchers...
          matcher_file='${{ github.workspace }}/.github/matchers/gradle-build-matcher.json'
          if test -f "${matcher_file:?}"; then
            echo "::add-matcher::${matcher_file:?}"
            echo 'Matcher configured.'
          fi

      - name: Build project
        run: ./gradlew assemble

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        run: |
          sudo apt-get -y install apksigner
          apksigner sign --key platform.pk8 --cert platform.x509.pem play-services-core/build/outputs/apk/default/release/*.apk

      - name: Setup semantic-release
        run: npm install

      - name: Release
        run: npm exec semantic-release
